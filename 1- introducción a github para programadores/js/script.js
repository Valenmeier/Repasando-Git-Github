//Todo --> Github en el proceso de desarrollo 
//* Github, es un servicio de repositorios en la nube, basado en git

//Todo --> Que es Git?
//* Git es un servicio de control de versiones,que nos permite administrar y trabajar en proyectos complejos con gran cantidad de desarrolladores, fue desarrollado por Linus Torvalds (el creador de linux), precisamente para poder trabajar con el código abierto y una gran cantidad de desarrolladores fue necesario.

//Todo --> como funciona y en que se diferencia con un respaldo?

//* En caso de que trabajes con un respaldo, lo unico que haces es pasar del punto a al punto b el archivo, reemplazandolo o escribiendo uno nuevo, pero siempre va a ser la última versión del código, si quieres tener diferentes versiones de tu código tienes que crear diferentes respaldos 

//* En el caso de un repositorio basado en Git, el proceso es completamente distinto, supongamos que tienes que guardar la nueva versión de tu código, en vez de reemplazar el archivo, lo que vamos a hacer es guardar los cambios, git se va a encargar de tener el archivo en su ultima versión y poderlo utilizar de manera regular, pero además de eso va a usar las versiones anteriores, eso quiere decir que el archivo en su estado anterior, no se reemplaza, se guarda. Vamos a tener siempre la última versión, pero tenemos acceso siempre a la anterior, en caso de que necesitemos revisar alguna versión anterior o devolvernos dentro del avance de nuestro proyecto.
//? Si ya llevas tiempo trabajando en desarrollo te abras dado cuenta que el cliente nos pide hacer cambios de elementos que existían hace tiempo o sencillamente, después de un tiempo descubrimos que habia un error o algún elemento que es incompatible.
//! Cuando trabajamos en git, simplemente tenemos que buscar la versión que tiene el problema o que tiene esa caracteristica que agregamos o eliminamos y podemos devolvernos en el tiempo para poder utilizar esa versión, o simplemente adaptarla y unirla con el codigo actual
//* Git nos permite trabajar en equipo , supongamos por ejemplo, que estas trabajando con un código base para tu aplicación , a partir de ese código base generas un cambio. Utilizando git, vas a tener ahora dos diferentes versiones de tu código, la versión actual y la versión anterior, esto es sumamente útil para poder trabajar, pero git nos va a permitir hacer algo bastante más complejo, por ejemplo, supongamos que quieres trabajar con otro desarrollador, ese desarrollador también puede utilizar el código base y generar un cambio, este cambio puede ser que no afecte de ninguna forma al tuyo, utilizando algo que se llama un branch (O una rama), osea el desarrollador B va a utilizar el mismo código base, va a implementar cambios y esos cambios se van a encontrar en otra versión del código. Dentro de Git, nosotros vamos a poder mantener una cantidad ilimitadas de ramas o "branches", cada "branch" puedde tener diferentes bases de código e implementar nuevos cambios. La mejor parte es que, una vez que tengamos probados y revisados todos estos cambios y deseamos implementarlo en la versión principal, simplemente podemos unir todas estas ramas y tener una versión unificada de nuestro código, a partir de ahí podemos seguir trabajando o podemos separarlo en nuevas ramas

//? Git nos permite trabajar en proyectos complejos, de manera profesional, manteniendo siempre un código ordenad. Github aprovecha todas las caracteristicas de git y además, nos permite distribuir todos nuestros contenidos en la nube

//Todo --> Qué es github
//* Github es un servicio para almacenar y distribuir proyectos de código basados en Git, si con Git, nosotros podemos crear versiones de nuestro código, con Github podemos, además de eso, distribuirlo en una plataforma global, gracias a esto Github se ha vuelto muy popular en proyectos colaborativos, que hacen uso intensivo de sus facilidades de distribución y colaboración 
//* Si bien es cierto Github se encarga de almacenar y distribuir proyectos basados en GIT, con el tiempo y gracias a su popularidad se ha convertido en toda una plataforma y hoy en dia ofrece servicios de información continua, colaboración, distribución, automatización e incluso gestión de proyectos. Aunque usualmente, para la mayoria de los desarrolladores crear, publicar y distribuir sus proyectos tiene un costo nulo, Github es un servicio pago y podemos encontrar dentro de la sección de github pricing, los diferentes paquetes que nos ofrecen.